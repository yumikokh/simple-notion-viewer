import { BlockObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import type { NextPage } from "next";
import Head from "next/head";
import { useCallback, useEffect, useState } from "react";
import NotionBlock from "../components/NotionBlock";
import { useNotion } from "../hooks/useNotion";
import styles from "../styles/Home.module.scss";
import { PageItem } from "./api/pages";

const Home: NextPage = () => {
  const { queryDatabase, retrievePage } = useNotion();
  const [list, setList] = useState<PageItem[]>([]);
  const [pageContent, setPageContent] = useState<BlockObjectResponse[] | null>(
    null
  );

  const query = useCallback(async () => {
    const data = await queryDatabase();
    console.log(data, "data");
    setList(data as unknown as PageItem[]);
  }, [queryDatabase]);

  const onClickItem = async (pageId: string) => {
    // setSelectedUrl(url);
    const data = await retrievePage(pageId);
    console.log(data);
    setPageContent(data);
  };

  useEffect(() => {
    query();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.container}>
        <div className={styles.sidebar}>
          <button onClick={query}>Refresh</button>

          <ul className={styles.list}>
            {list?.map(({ title, date, url, id }, i) => (
              <li key={i}>
                <div onClick={() => onClickItem(id)}>
                  <h3>{title}</h3>
                  <p>{date}</p>
                </div>
              </li>
            ))}
          </ul>
        </div>

        <div>
          {pageContent ? (
            pageContent.map((block, i) => <NotionBlock key={i} block={block} />)
          ) : (
            <p>Not Selected.</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default Home;
